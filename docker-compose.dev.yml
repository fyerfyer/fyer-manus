version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: fyer-manus-postgres
    environment:
      POSTGRES_DB: ai_agent
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./go-api/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_agent"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fyer-manus-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: fyer-manus-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - fyer-manus-network

  # Go API 服务
  api:
    build:
      context: .
      dockerfile: ./go-api/Dockerfile
    container_name: fyer-manus-api
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=ai_agent
      - DB_SSLMODE=disable
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=
      - JWT_SECRET=dev-jwt-secret-key-256-bits-long-for-development-only
      - SERVER_MODE=debug
      - LOG_LEVEL=debug
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - fyer-manus-network
    profiles:
      - api

  # PostgreSQL Admin (可选管理工具)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fyer-manus-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fyer-manus-network
    profiles:
      - tools

  # Redis Commander (可选管理工具)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: fyer-manus-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - fyer-manus-network
    profiles:
      - tools
      
  # Prometheus 监控
  prometheus:
    image: prom/prometheus:latest
    container_name: fyer-manus-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - fyer-manus-network
    profiles:
      - monitoring

  # Grafana 可视化
  grafana:
    image: grafana/grafana:latest
    container_name: fyer-manus-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - fyer-manus-network
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  fyer-manus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16